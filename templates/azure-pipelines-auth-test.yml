# Azure DevOps Pipeline: EasyPIM Authentication Test  
# SELF-HOSTED AGENT VERSION - No parallelism limitations!

trigger: none

variables:
- group: EasyPIM-EventDriven-Governance

# Use self-hosted agent - no parallelism limitations
pool: Default

# Self-hosted agent job - full PowerShell capabilities
jobs:
- job: EasyPIM_Auth_Test
  displayName: 'EasyPIM Authentication & Environment Test'
  timeoutInMinutes: 30
  
  steps:
  - task: PowerShell@2
    displayName: 'Environment Check'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üîç EasyPIM Authentication Test (Self-Hosted)" -ForegroundColor Cyan
        Write-Host "=============================================" -ForegroundColor Cyan
        
        Write-Host "`nüñ•Ô∏è Agent Information:" -ForegroundColor Yellow
        Write-Host "   Computer: $env:COMPUTERNAME" -ForegroundColor Gray
        Write-Host "   User: $env:USERNAME" -ForegroundColor Gray
        Write-Host "   Agent: $(Agent.Name)" -ForegroundColor Gray
        Write-Host "   Pool: $(Agent.PoolName)" -ForegroundColor Gray
        
        # Check required environment variables
        Write-Host "`nüìã Environment Variables:" -ForegroundColor Yellow
        
        $vars = @{
          "AZURE_TENANT_ID" = $env:AZURE_TENANT_ID
          "AZURE_SUBSCRIPTION_ID" = $env:AZURE_SUBSCRIPTION_ID  
          "AZURE_CLIENT_ID" = $env:AZURE_CLIENT_ID
          "AZURE_RESOURCE_GROUP" = $env:AZURE_RESOURCE_GROUP
          "AZURE_KEY_VAULT_NAME" = $env:AZURE_KEY_VAULT_NAME
          "AZURE_KEY_VAULT_URI" = $env:AZURE_KEY_VAULT_URI
          "EASYPIM_SECRET_NAME" = $env:EASYPIM_SECRET_NAME
        }
        
        $allSet = $true
        foreach ($var in $vars.GetEnumerator()) {
          if ($var.Value) {
            Write-Host "  ‚úÖ $($var.Key): Set" -ForegroundColor Green
          } else {
            Write-Host "  ‚ùå $($var.Key): Missing" -ForegroundColor Red
            $allSet = $false
          }
        }
        
        if ($allSet) {
          Write-Host "`nüéâ All environment variables are configured!" -ForegroundColor Green
        } else {
          Write-Host "`n‚ö†Ô∏è Some environment variables are missing" -ForegroundColor Yellow
        }
    env:
      AZURE_TENANT_ID: $(AZURE_TENANT_ID)
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)  
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
      AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
      AZURE_KEY_VAULT_NAME: $(AZURE_KEY_VAULT_NAME)
      AZURE_KEY_VAULT_URI: $(AZURE_KEY_VAULT_URI)
      EASYPIM_SECRET_NAME: $(EASYPIM_SECRET_NAME)

  - task: PowerShell@2
    displayName: 'Azure Authentication Test'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "`nüîê Testing Azure Authentication..." -ForegroundColor Yellow
        
        # Test Azure CLI authentication
        try {
          $account = az account show --query "{subscriptionId:id, tenantId:tenantId, user:user.name}" | ConvertFrom-Json
          Write-Host "  ‚úÖ Azure CLI authenticated as: $($account.user)" -ForegroundColor Green
          Write-Host "     Subscription: $($account.subscriptionId)" -ForegroundColor Gray
          Write-Host "     Tenant: $($account.tenantId)" -ForegroundColor Gray
          
          # Test resource group access
          Write-Host "`nüîç Testing Resource Group Access..." -ForegroundColor Yellow
          $rg = az group show --name $(AZURE_RESOURCE_GROUP) --query "{name:name, location:location, provisioningState:properties.provisioningState}" | ConvertFrom-Json
          Write-Host "  ‚úÖ Resource Group: $($rg.name)" -ForegroundColor Green
          Write-Host "     Location: $($rg.location)" -ForegroundColor Gray
          Write-Host "     Status: $($rg.provisioningState)" -ForegroundColor Gray
          
          # Test Key Vault access
          Write-Host "`nüîë Testing Key Vault Access..." -ForegroundColor Yellow
          $kv = az keyvault show --name $(AZURE_KEY_VAULT_NAME) --query "{name:name, vaultUri:properties.vaultUri}" | ConvertFrom-Json
          Write-Host "  ‚úÖ Key Vault: $($kv.name)" -ForegroundColor Green
          Write-Host "     URI: $($kv.vaultUri)" -ForegroundColor Gray
          
        } catch {
          Write-Host "  ‚ùå Azure authentication failed: $($_.Exception.Message)" -ForegroundColor Red
          throw "Azure authentication test failed"
        }
    env:
      AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
      AZURE_KEY_VAULT_NAME: $(AZURE_KEY_VAULT_NAME)

  - task: PowerShell@2
    displayName: 'Test Summary'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "`nüéØ Self-Hosted Agent Test Complete!" -ForegroundColor Green
        Write-Host "====================================" -ForegroundColor Green
        
        Write-Host "`n‚úÖ Achievements:" -ForegroundColor Cyan
        Write-Host "   ‚Ä¢ Self-hosted agent working" -ForegroundColor White
        Write-Host "   ‚Ä¢ No parallelism limitations" -ForegroundColor White
        Write-Host "   ‚Ä¢ Variable group accessible" -ForegroundColor White
        Write-Host "   ‚Ä¢ Azure authentication confirmed" -ForegroundColor White
        Write-Host "   ‚Ä¢ Resource group access verified" -ForegroundColor White
        Write-Host "   ‚Ä¢ Key Vault connectivity tested" -ForegroundColor White
        
        Write-Host "`nüöÄ Ready for EasyPIM workflows!" -ForegroundColor Green
